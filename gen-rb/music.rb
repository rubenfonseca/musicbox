#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'musicbox_types'

module Music
  class Client
    include ::Thrift::Client

    def getTracksFromAlbum(albumID, sessionID)
      send_getTracksFromAlbum(albumID, sessionID)
      return recv_getTracksFromAlbum()
    end

    def send_getTracksFromAlbum(albumID, sessionID)
      send_message('getTracksFromAlbum', GetTracksFromAlbum_args, :albumID => albumID, :sessionID => sessionID)
    end

    def recv_getTracksFromAlbum()
      result = receive_message(GetTracksFromAlbum_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'getTracksFromAlbum failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_getTracksFromAlbum(seqid, iprot, oprot)
      args = read_args(iprot, GetTracksFromAlbum_args)
      result = GetTracksFromAlbum_result.new()
      result.success = @handler.getTracksFromAlbum(args.albumID, args.sessionID)
      write_result(result, oprot, 'getTracksFromAlbum', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class GetTracksFromAlbum_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    ALBUMID = 1
    SESSIONID = 2

    FIELDS = {
      ALBUMID => {:type => ::Thrift::Types::I32, :name => 'albumID'},
      SESSIONID => {:type => ::Thrift::Types::STRING, :name => 'sessionID'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class GetTracksFromAlbum_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::LIST, :name => 'success', :element => {:type => ::Thrift::Types::STRUCT, :class => TrackData}}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

